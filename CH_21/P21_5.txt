•• P21.5 Write a client application that executes an infinite loop that
a. Prompts the user for a number.
b. Sends that value to the server.
c. Receives the number.
d. Displays the new number.
Also write a server that executes an infinite loop whose body accepts a client connection, reads a number from the client, computes its square root, and writes the result to the client.
========================================================================================
solution
=====
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class Client 
{
	public static void main(String [] args) throws IOException
	{
		final int PORT_NUMBER = 333;
		Socket s = new Socket("localhost" , PORT_NUMBER);
		
		InputStream inStream = s.getInputStream();
		OutputStream outStream = s.getOutputStream();
		
		Scanner in = new Scanner(inStream);
		PrintWriter out = new PrintWriter(outStream);
		
		Scanner clientInput = new Scanner(System.in);
		
		while(true)
		{
			System.out.print("enter a number: ");
			int num = clientInput.nextInt();
			System.out.println("Sending: " + num);
			out.println(num);
			out.flush();
			String response = in.nextLine();
			System.out.println("Receiving: " + response);
		}
	}
}
========================================================================================

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server 
{
	public static void main(String [] args) throws IOException
	{
		final int PORT_NUM = 333;
		ServerSocket server = new ServerSocket(PORT_NUM);
		System.out.println("waiting for clients to connect ...");
		while(true)
		{
			Socket s = server.accept();
			System.out.println("Client Connected");
			ClientService service = new ClientService(s);
			Thread t= new Thread(service);
			t.start();
		}
	}
}
========================================================================================
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class ClientService implements Runnable
{
	private Socket s;
	private Scanner in;
	private PrintWriter out;

	public ClientService(Socket aSocket) 
	{
		s = aSocket;
	}

	public void run()
	{
		try
		{
			try
			{
				in = new Scanner(s.getInputStream());
				out = new PrintWriter(s.getOutputStream());
				doService();
			}
			finally
			{
				s.close();
			}
		}
		catch (IOException exception)
		{
			exception.printStackTrace();
		}
	}
	
	public void doService() throws IOException
	{
		while(true)
		{
			if (!in.hasNextInt()) { return; }
			int command = in.nextInt();
			out.println(Math.sqrt(command));
			out.flush();
		}
	}
}
========================================================================================
sample output
=========
enter a number: 4
Sending: 4
Receiving: 2.0
enter a number: 25
Sending: 25
Receiving: 5.0
enter a number: 36
Sending: 36
Receiving: 6.0
========================================================================================