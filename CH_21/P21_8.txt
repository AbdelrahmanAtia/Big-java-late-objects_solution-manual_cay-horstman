••• P21.8 Write a simple web server that recognizes only the GET request (without the Host: request parameter and blank line). When a 
client connects to your server and sends a command, such as GET filename HTTP/1.1, then return a header

 HTTP/1.1 200 OK

followed by a blank line and all lines in the file. If the file doesn’t exist, return 404 Not Found instead.

Your server should listen to port 8080. Test your web server by starting up your web browser and loading a page, such as 

localhost:8080/c:\cs1\myfile.html.
========================================================================================
solution
=====

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class WebServer 
{
	public static void main(String [] args) throws IOException
	{
		final int PORT_NUMBER = 8080;
		ServerSocket server = new ServerSocket(PORT_NUMBER);
		System.out.println("waititng for client to connect..."); 
		
		while(true)
		{
			Socket s = server.accept();
			System.out.println("client connected");
			ClientService service = new ClientService(s);
			Thread t= new Thread(service);
			t.start();
		}		
	}
}
========================================================================================
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class Client 
{
	public static void main(String [] args) throws IOException
	{
		final int PORT_NUMBER = 8080;
		Socket s = new Socket("localhost" , PORT_NUMBER);
		
		InputStream inStream = s.getInputStream();
		OutputStream outStream = s.getOutputStream();
		
		Scanner in = new Scanner(inStream);
		PrintWriter out = new PrintWriter(outStream);
		
		Scanner clientInput = new Scanner(System.in);
		
		String command = "GET C:\\cs1\\myfile1.html HTTP/1.1\n";
		out.print(command);
		out.flush();
		while(in.hasNext())
		{
			String response = in.nextLine();
			System.out.println(response);
		}
		
		s.close();
	}
}
========================================================================================

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class ClientService implements Runnable
{
	private Socket s;
	private Scanner in;
	private PrintWriter out;

	public ClientService(Socket aSocket) 
	{
		s = aSocket;
	}

	public void run()
	{
		try
		{
			try
			{
				in = new Scanner(s.getInputStream());
				out = new PrintWriter(s.getOutputStream());
				doService();
			}
			finally
			{
				s.close();
			}
		}
		catch (IOException exception)
		{
			exception.printStackTrace();
		}
	}
	
	public void doService() throws IOException
	{
		while (true)
		{
			if (!in.hasNext()) { return; }
			String command = in.next();
			if(command.equals("GET"))
				executeCommand(command);
		}
			
	}

	public void executeCommand(String command) throws FileNotFoundException
	{
		try
		{
			String fileName = in.next();
			
			String header = in.next() + " " + "200 OK\n\n";
			Scanner fileInput = new Scanner(new File(fileName));
			
			out.print(header);
			out.flush();

			while(fileInput.hasNext())
			{
				out.println(fileInput.nextLine());
				out.flush();
			}
		}
		catch(Exception fileNotFoundException)
		{
			out.println("404 Not Found");
			out.flush();
		}
	}
}
========================================================================================