•• P23.1 Write a program that can read XML files, such as
<purse>
<coin>
<value>0.5</value>
<name>half dollar</name>
</coin>
. . .
</purse>
Your program should construct a Purse object and print the total value of the coins in the purse.
========================================================================================
solution
=====

/**
  describe a coin with a name and a value
*/

public class Coin
{
	private double value;
	private String name;
	
	public Coin(double aValue, String aName)
	{
		value = aValue;
		name = aName;
	}
	/**
	 * gets the coin value
	 * @return the value
	 */
	public double getValue()
	{
		return value;
	}
	/**
	 * gets the coin name
	 * @return the name
	 */
	public String getName()
	{
		return name;
	}
	
	public String format() 
	{
		return String.format("%-20s%8.2f", name, value);
	}

}
========================================================================================
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;
/**
An XML parser for coins.
*/
public class PurseParser
{
	private DocumentBuilder builder;
	private XPath path;
	
	/**
	Constructs a parser that can parse coins.
	*/
	
	public PurseParser() throws ParserConfigurationException
	{
		DocumentBuilderFactory dbfactory = DocumentBuilderFactory.newInstance();
		builder = dbfactory.newDocumentBuilder();
		XPathFactory xpfactory = XPathFactory.newInstance();
		path = xpfactory.newXPath();
	}
	/**
	Parses an XML file containing coins.
	param fileName the name of the file
	return an array list containing all coins in the XML file
	*/
	public ArrayList <Coin> parse(String fileName) throws SAXException, IOException, XPathExpressionException
	{
		File f = new File(fileName);
		Document doc = builder.parse(f);

		ArrayList<Coin> purse = new ArrayList<Coin>();
		int coinCount = Integer.parseInt(path.evaluate("count(/purse/coin)", doc));
		for (int i = 1; i <= coinCount; i++)
		{
			double value = Double.parseDouble(path.evaluate("/purse/coin[" + i + "]/value", doc));
			String name = path.evaluate("/purse/coin[" + i + "]/name", doc);
			Coin c = new Coin(value, name);
			purse.add(c);
		}
		return purse;
	}
}
========================================================================================
import java.util.ArrayList;

public class PurseParserDemo 
{
	public static void main(String [] args) throws Exception
	{
		PurseParser parser = new PurseParser();
		ArrayList<Coin> purse = parser.parse("purse.xml");
		double totalValue = 0;
		for (Coin aCoin : purse)
		{
			
			totalValue = totalValue + aCoin.getValue();
		}
		System.out.println("\ntotal value = " + totalValue);
	}
}
========================================================================================
output
====

total value = 0.75
========================================================================================
the assumed xml file
--------------------------
<?xml version="1.0"?>
<purse>
  <coin>
    <value>0.5</value>
    <name>half dollar</name>
  </coin>
  <coin>
    <value>0.25</value>
    <name>quarter</name>
  </coin>
</purse>
========================================================================================