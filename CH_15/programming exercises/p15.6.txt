• P 15.6 Implement a to do list. Tasks have a priority between 1 and 9, and a description. When the user enters the command add priority 
description, the program adds a new task. When the user enters next, the program removes and prints the most urgent task. The quit 
command quits the program. Use a priority queue in your solution.
========================================================================================
solution
=====

import java.util.PriorityQueue;

public class Task implements Comparable 
{
	private int priority;
	private String description;
	
	public Task(int priority , String description)
	{
		this.priority=priority;
		this.description=description;
	}

	public int compareTo(Object otherObject)
	{
		Task other = (Task) otherObject;
		if (priority < other.priority) 
		{
			return -1; 
		}
		else if (priority == other.priority) 
		{
			return 0; 
		}
		else 
		{
			return 1; 
		}
	}
	
	public String toString()
	{
	return getClass().getName() + "[description=" + description + "]";
	}
	
}
========================================================================================
import java.util.PriorityQueue;
import java.util.Scanner;

public class TaskTest 
{
	public static void main(String [] args)
	{
		Scanner in=new Scanner(System.in);
		PriorityQueue <Task> q=new PriorityQueue<>();
		boolean value=true;
		System.out.println("enter add  or next or quit ");
		// add priority description  >> to add a task
		//next >> to remove the most urgent task
		//quit >> to exit
		
		while(value)
		{
			String str=in.next();
			if(str.equals("add"))
			{
				int priority=in.nextInt();
				String description=in.nextLine();
				q.add(new Task(priority, description));
				
			}
			else if(str.equals("next"))
			{
				System.out.println(q.remove());
			}
			else if(str.equals("quit"))
			{
				value=false;
			}
		}
	}
}
========================================================================================