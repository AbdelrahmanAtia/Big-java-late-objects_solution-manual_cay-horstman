••• P 15.10 Reimplement Exercise P15.9 so that the keys of the map are objects of class Student. A student should have a first name, a last 
name, and a unique integer ID. For grade changes and removals, lookup should be by ID. The printout should be sorted by last name. If 
two students have the same last name, then use the first name as a tie breaker. If the first names are also identical, then use the integer 
ID.

 Hint: Use two maps.
========================================================================================
solution
======

======================================================
i solved it using only one map ,  i dont know how and why to use two maps
======================================================

package ch_15;

import java.util.ArrayList;

import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class P15_9 implements Comparator <Student>
{
	public static void main(String [] args)
	{
		Scanner in=new Scanner(System.in);
		String firstName , lastName  ,  grade , str = "" ;
		int id;
		Map <Student , String>courseGrades=new HashMap<>();

		while(!str.equals("Q")) 
		{
			System.out.println("A)dd R)emove M)odify P)rint Q)uit");
			str=in.next();
			if(str.equals("A"))
			{
				System.out.print("Enter the student's first name: ");
				firstName=in.next();
				System.out.print("Enter the student's last name : ");
				lastName=in.next();
				System.out.print("enter the Student's Id        : ");
				id=in.nextInt();
				
				Student s=new Student(firstName , lastName , id);
				
				System.out.print("enter the Student's grade     : ");
				
				grade=in.next();
				
				courseGrades.put(s, grade);
				
			}
			else if(str.equals("M"))
			{
				System.out.println("enter the Student's id : ");
				id=in.nextInt();
				System.out.println("enter the Student new grade");
				grade=in.next();
				
				Set <Student> keySet=courseGrades.keySet();
				for(Student student : keySet)
				{
					if(id==student.getId())
						courseGrades.put(student, grade);
				}
			}
			else if(str.equals("R"))
			{
				Student target=null;
				System.out.print("Enter the student's id: ");
				id=in.nextInt();
				Set <Student> keySet=courseGrades.keySet();
				for(Student student : keySet)
				{
					if(id==student.getId())
						target=student;
						
				}
				courseGrades.remove(target);
			}
			else if(str.equals("P"))
			{
				List <Student> list =new ArrayList<>();	
				for(Student student : courseGrades.keySet())
				{
					list.add(student);
				}
				
				Collections.sort(list , new P15_9() );
				for(Student student : list)
				{
					System.out.println("name :"+student.getFirstName() + " "+student.getLastName() + ",  id: "+student.getId()+",  grade: "+courseGrades.get(student));              
				}
			}
			else if(str.equals("Q"))
			{
				// exit
			}
			else
				System.out.println("undefined input");
		}
	}

	public int compare(Student s1, Student s2)
	{
		String fn1=s1.getFirstName();
		String ln1=s1.getLastName();
		int id1=s1.getId();
		String fn2=s2.getFirstName();
		String ln2=s2.getLastName();
		int id2=s2.getId();
		int i=0;
		while(true)
		{
			if(i >= ln1.length() || i >=ln2.length() )
			{
				if(ln1.length() < ln2.length())
					return -1;
				else if (ln1.length() > ln2.length())
					return 1;
				else
					break;
			}
			char ch1=ln1.charAt(i);
			char ch2=ln2.charAt(i);
			if(ch1 < ch2)
				return -1;
			else if (ch1 > ch2)
				return 1;
			
			i++;
		}
		
		i=0;
		
		while(true)
		{
			if(i >= fn1.length() || i >=fn2.length() )
			{
				if(fn1.length() < fn2.length())
					return -1;
				else if (fn1.length() > fn2.length())
					return 1;
				else
					break;
			}
			char ch1=fn1.charAt(i);
			char ch2=fn2.charAt(i);
			if(ch1 < ch2)
				return -1;
			else if (ch1 > ch2)
				return 1;
			
			i++;
		}
		
		if(id1 < id2)
			return -1;
		else
			return 1;

	}
}
========================================================================================
public class Student 
{
	private String firstName;
	private String lastName;
	private int id;
	
	
	public Student(String fm , String lm , int id)
	{
		firstName=fm;
		lastName=lm;
		this.id=id;
	}

	public String getFirstName() {
		return firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public int getId() {
		return id;
	}


	public void setId(int id) {
		this.id = id;
	}
	
}
========================================================================================