••• Graphics P 19.11 Write a graphical application in which the user clicks on a panel to add shapes (rectangles, ellipses, cars, etc.) at the 
mouse click location. The shapes are stored in an array list. When the user selects File->Save from the menu, save  the selection of shapes 
in a file. When the user selects File->Open, load in a file. Use serialization.
========================================================================================
solution
---------

import java.awt.Graphics;
import java.io.Serializable;
import javax.swing.JComponent;

public class Rectangle extends JComponent implements Serializable
{
	private int x;
	private int y;
	public Rectangle(int x , int y)
	{
		this.x = x;
		this.y = y;
	}
	public void paintComponent(Graphics g)
	{
		g.drawRect(x-100,y-50, 30, 60);
	}
}
========================================================================================
import java.awt.Graphics;
import java.io.Serializable;
import javax.swing.JComponent;

public class Square extends JComponent implements Serializable
{
	private int x;
	private int y;
	public Square(int x , int y)
	{
		this.x = x;
		this.y = y;
	}
	public void paintComponent(Graphics g)
	{
		g.drawRect(x-100,y-50, 40, 40);
	}
}
========================================================================================

import java.awt.Graphics;
import java.io.Serializable;
import javax.swing.JComponent;

public class Circle extends JComponent implements Serializable
{
	private int x;
	private int y;
	public Circle(int x , int y)
	{
		this.x = x;
		this.y = y;
	}
	public void paintComponent(Graphics g)
	{
		g.drawOval(x-100, y-50, 30, 30);
	}
}
========================================================================================
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

public class Shapes 
{
	private JFrame frame;
	private JPanel panel;
	private JButton b1;
	private JButton b2;
	private JButton b3;
	private String shape_name;
	private JMenuBar menuBar;
	private JMenu fileMenu;
	private JMenuItem saveItem;
	private JMenuItem loadItem;
	private ArrayList <JComponent> shapes;
	private File f;

	
	
	
	public Shapes()
	{
		frame = new JFrame();
		frame.setSize(400 , 400);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		panel = new JPanel();
		panel.setLayout(new GridLayout(3 , 1));
		frame.add(panel , BorderLayout.WEST);
		b1 = new JButton("Rectangle");
		panel.add(b1);
		b2 = new JButton("Square");
		panel.add(b2);
		b3 = new JButton("Circle");
		panel.add(b3);
		
		ActionListener listener1 = new ClickListener1();
		b1.addActionListener(listener1);
		
		ActionListener listener2 = new ClickListener2();
		b2.addActionListener(listener2);
		
		ActionListener listener3 = new ClickListener3();
		b3.addActionListener(listener3);
		
		MouseListener listener = new PressListener();
		frame.addMouseListener(listener);
		shape_name = "";
		
		menuBar = new JMenuBar();
		frame.add(menuBar , BorderLayout.NORTH);
		fileMenu = new JMenu("File");
		menuBar.add(fileMenu);
		saveItem = new JMenuItem("Save");
		loadItem = new JMenuItem("Load");
		fileMenu.add(saveItem);
		fileMenu.add(loadItem);
		
		ActionListener saveListener = new SaveListener();
		saveItem.addActionListener(saveListener);
		
		ActionListener loadListener = new LoadListener();
		loadItem.addActionListener(loadListener);
		
		shapes = new ArrayList<>();
		f = new File("saved_data.dat");
		frame.setVisible(true);

		
	}
	 class ClickListener1 implements ActionListener {

		public void actionPerformed(ActionEvent e) {
			shape_name = "Rectangle";
		}
	 }
	 class ClickListener2 implements ActionListener {

			public void actionPerformed(ActionEvent e) {
				shape_name = "Square";
			}
	 }
	 class ClickListener3 implements ActionListener {

			public void actionPerformed(ActionEvent e) {
				shape_name = "Circle";
			}
	 }
	public class SaveListener implements ActionListener {

		 ObjectOutputStream out;
			public void actionPerformed(ActionEvent e) 
			{
			    try {
					saveShapes();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}

			private void saveShapes() throws FileNotFoundException, IOException 
			{
				ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(f));
				out.writeObject(shapes);
				out.close();
			}
	 }
	public class LoadListener implements ActionListener {

			public void actionPerformed(ActionEvent e) 
			{
				try {
					loadShapes();
				} catch (ClassNotFoundException | IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}

			public void loadShapes() throws ClassNotFoundException, IOException
			{
				if (f.exists())
				{
					 ObjectInputStream in = new ObjectInputStream(new FileInputStream(f));
					 shapes = (ArrayList<JComponent>) in.readObject();
					 in.close();
				}
				for(JComponent o : shapes)
						frame.add(o);

				frame.setVisible(false);
				frame.setVisible(true);				
			}
	 }
	 class PressListener implements MouseListener 
	 {
		 Rectangle r;
		 Square s;
		 Circle c;

		public void mouseClicked(MouseEvent e) {
			if(shape_name.equals("Rectangle"))
			{
				 r = new Rectangle(e.getX() , e.getY());
				 frame.add(r);
				 
				 shapes.add(r);
			}
			else if(shape_name.equals("Square"))
			{
				 s = new Square(e.getX() , e.getY());
				 frame.add(s);
				 shapes.add(s);
			}
			else if(shape_name.equals("Circle"))
			{
				 c = new Circle(e.getX() , e.getY());
				 frame.add(c);
				 shapes.add(c);
			}
			 frame.setVisible(true);
		}
		public void mouseEntered(MouseEvent arg0) {}

		public void mouseExited(MouseEvent arg0) {}

		public void mousePressed(MouseEvent arg0) {}

		public void mouseReleased(MouseEvent arg0) {}

	}
}
========================================================================================
public class ViewShapes 
{
	public static void main(String [] args)
	{
		Shapes x = new Shapes();
	}
}
========================================================================================