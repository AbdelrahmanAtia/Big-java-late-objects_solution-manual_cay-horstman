• P11.18 Change the RectangleComponent for the mouse listener program in Section 11.6 so that a new rectangle is added to the component whenever the 
mouse is clicked. Hint: Store all points on which the user clicked, and draw all rectangles in the paintComponent method.
==============================================================================================
solution
=====

import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;

import javax.swing.JComponent;

 /**
 This component displays a rectangle that can be moved.
 */
 public class RectangleComponent2 extends JComponent
{
	 private static final int RECTANGLE_WIDTH = 20;
	 private static final int RECTANGLE_HEIGHT = 30;
	
	 private int xLeft;
	 private int yTop;
	 
	 private ArrayList <Integer> xCoordinates;
	 private ArrayList <Integer> yCoordinates;

	 public RectangleComponent2()
	 {
		 xCoordinates=new ArrayList<>();
		 yCoordinates=new ArrayList<>();
		 xLeft = 0;
		 yTop = 0;
	 }
	
	 public void paintComponent(Graphics g)
	 {
		 for(int i=0;i<xCoordinates.size();i++)
		 {
			 g.fillRect(xCoordinates.get(i),yCoordinates.get(i) , RECTANGLE_WIDTH, RECTANGLE_HEIGHT);
		 }
	}
	
	 /**
	 Moves the rectangle to the given location.
	 @param x the x-position of the new location
	 @param y the y-position of the new location
	 */
	 public void moveRectangleTo(int x, int y)
	 {
		 xLeft = x;
		 yTop = y;
		 xCoordinates.add(xLeft);
		 yCoordinates.add(yTop);
		 repaint();
	 }
 }
==============================================================================================
 import java.awt.event.MouseListener;
 import java.awt.event.MouseEvent;
 import javax.swing.JFrame;

 /**
 This frame contains a moving rectangle.
 */
 public class RectangleFrame2 extends JFrame
 {
	 private static final int FRAME_WIDTH = 300;
	 private static final int FRAME_HEIGHT = 400;
	
	 private RectangleComponent2 scene;
	
	 class MousePressListener implements MouseListener
	 {
	 public void mousePressed(MouseEvent event)
	 {
		 int x = event.getX();
		 int y = event.getY();
		 scene.moveRectangleTo(x, y);
	 }
	
	 // Do-nothing methods
	 public void mouseReleased(MouseEvent event) {}
	 public void mouseClicked(MouseEvent event) {}
	 public void mouseEntered(MouseEvent event) {}
	 public void mouseExited(MouseEvent event) {}
	 }
	
	 public RectangleFrame2()
	 {
	 scene = new RectangleComponent2();
	 add(scene);
	
	 MouseListener listener = new MousePressListener();
	 scene.addMouseListener(listener);
	
	 setSize(FRAME_WIDTH, FRAME_HEIGHT);
	 }
}
==============================================================================================
 import javax.swing.JFrame;

 /**
 This program displays a rectangle that can be moved with the mouse.
 */
 public class RectangleViewer2
 {
	 public static void main(String[] args)
	 {
		 JFrame frame = new RectangleFrame2();
		 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		 frame.setVisible(true);
	 }
 }
==============================================================================================